server:
  port: 8080
spring:
  application:
    name: renthouse
---

spring:
  profiles: default
#  jpa:
#    properties:
#      hibernate:
#        show_sql: true
#        format_sql: true
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.MySQL57Dialect
  datasource:
#    url: jdbc:mysql://localhost:3306/renthouse
#    username: root
#    password: admin
#    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${_DATASOURCE_ADDRESS:localhost:3306}/${_DATASOURCE_TABLESPACE:renthouse}
    username: ${_DATASOURCE_USERNAME:root1}
    password: ${_DATASOURCE_PASSWORD:admin1}
    driverClassName: com.mysql.cj.jdbc.Driver
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: renthouse
          destination: team
          contentType: application/json
        event-out:
          destination: team
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8084

---

spring:
  profiles: docker
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: renthouse
          destination: team
          contentType: application/json
        event-out:
          destination: team
          contentType: application/json




